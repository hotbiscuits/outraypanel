import{s as x,f as _,g as h,h as m,d as c,i as p,y as u,V as $,o as E,l as L,a as d,m as w,c as g,x as f,n as S}from"../chunks/scheduler.EOolTuyq.js";import{e as y}from"../chunks/each.-oqiv04n.js";import{S as U,i as j}from"../chunks/index.siMF19mn.js";function k(i,l,n){const t=i.slice();return t[1]=l[n],t}function v(i){let l;return{c(){l=_("ul")},l(n){l=h(n,"UL",{});var t=m(l);t.forEach(c)},m(n,t){p(n,l,t)},p:u,d(n){n&&c(l)}}}function b(i){let l,n=i[1].name+"",t,a,o,e=i[1].type==="directory"&&v();return{c(){l=_("li"),t=L(n),a=d(),e&&e.c(),o=d()},l(r){l=h(r,"LI",{});var s=m(l);t=w(s,n),a=g(s),e&&e.l(s),o=g(s),s.forEach(c)},m(r,s){p(r,l,s),f(l,t),f(l,a),e&&e.m(l,null),f(l,o)},p(r,s){s&1&&n!==(n=r[1].name+"")&&S(t,n),r[1].type==="directory"?e?e.p(r,s):(e=v(),e.c(),e.m(l,o)):e&&(e.d(1),e=null)},d(r){r&&c(l),e&&e.d()}}}function q(i){let l,n=y(i[0]),t=[];for(let a=0;a<n.length;a+=1)t[a]=b(k(i,n,a));return{c(){l=_("ul");for(let a=0;a<t.length;a+=1)t[a].c()},l(a){l=h(a,"UL",{});var o=m(l);for(let e=0;e<t.length;e+=1)t[e].l(o);o.forEach(c)},m(a,o){p(a,l,o);for(let e=0;e<t.length;e+=1)t[e]&&t[e].m(l,null)},p(a,[o]){if(o&1){n=y(a[0]);let e;for(e=0;e<n.length;e+=1){const r=k(a,n,e);t[e]?t[e].p(r,o):(t[e]=b(r),t[e].c(),t[e].m(l,null))}for(;e<t.length;e+=1)t[e].d(1);t.length=n.length}},i:u,o:u,d(a){a&&c(l),$(t,a)}}}function C(i,l,n){let t=[];return E(async()=>{const a=await fetch("/api/outray/tree/");a.ok?n(0,t=await a.json()):console.error("Failed to fetch directory tree")}),[t]}class P extends U{constructor(l){super(),j(this,l,C,q,x,{})}}export{P as component};
