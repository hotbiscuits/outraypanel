{"version":3,"file":"_server.ts-842OgA4c.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/outray/tree/_server.ts.js"],"sourcesContent":["import { promises } from \"fs\";\nimport path from \"path\";\nasync function getDirectoryTree(dirPath) {\n  const entries = await promises.readdir(dirPath, { withFileTypes: true });\n  const result = await Promise.all(\n    entries.map(async (entry) => {\n      const fullPath = path.join(dirPath, entry.name);\n      if (entry.isDirectory()) {\n        return { name: entry.name, type: \"directory\", children: await getDirectoryTree(fullPath) };\n      } else {\n        return { name: entry.name, type: \"file\" };\n      }\n    })\n  );\n  return result;\n}\nasync function GET(req, res) {\n  try {\n    const tree = await getDirectoryTree(process.cwd());\n    res.end(JSON.stringify(tree));\n  } catch (error) {\n    res.statusCode = 500;\n    res.end(JSON.stringify({ error: \"Failed to read directory\" }));\n  }\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":";;;AAEA,eAAe,gBAAgB,CAAC,OAAO,EAAE;AACzC,EAAE,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;AAC3E,EAAE,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,GAAG;AAClC,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,KAAK,KAAK;AACjC,MAAM,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AACtD,MAAM,IAAI,KAAK,CAAC,WAAW,EAAE,EAAE;AAC/B,QAAQ,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC;AACnG,OAAO,MAAM;AACb,QAAQ,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;AAClD,OAAO;AACP,KAAK,CAAC;AACN,GAAG,CAAC;AACJ,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC;AACD,eAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE;AAC7B,EAAE,IAAI;AACN,IAAI,MAAM,IAAI,GAAG,MAAM,gBAAgB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;AACvD,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AAClC,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC;AACzB,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,0BAA0B,EAAE,CAAC,CAAC,CAAC;AACnE,GAAG;AACH;;;;"}